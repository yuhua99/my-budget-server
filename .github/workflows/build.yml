name: Build and Release

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  release:
    types: [ created ]

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      
    - name: Cache cargo registry
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        
    - name: Run tests
      run: cargo test --verbose

  build-linux:
    name: Build Linux Binary
    runs-on: ubuntu-latest
    needs: test
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      
    - name: Cache cargo registry
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        
    - name: Build release binary
      run: cargo build --release --verbose
      
    - name: Create artifact directory
      run: mkdir -p artifacts
      
    - name: Copy binary to artifacts
      run: cp target/release/my-budget-server artifacts/my-budget-server-linux-x86_64
      
    - name: Upload binary artifact
      uses: actions/upload-artifact@v4
      with:
        name: my-budget-server-linux-x86_64
        path: artifacts/my-budget-server-linux-x86_64
        retention-days: 30

  # Optional: Create release with binary when tag is pushed
  release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: build-linux
    if: github.event_name == 'release'
    steps:
    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        name: my-budget-server-linux-x86_64
        
    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ./my-budget-server-linux-x86_64
        asset_name: my-budget-server-linux-x86_64
        asset_content_type: application/octet-stream